#include <iostream>
#include <time.h>
#include <cmath>

using namespace std;
/*–í–∞—Ä–∏–∞–Ω—Ç 18
–í –æ–¥–Ω–æ–º–µ—Ä–Ω–æ–º –º–∞—Å—Å–∏–≤–µ, —Å–æ—Å—Ç–æ—è—â–µ–º –∏–∑ ùëõ —Ü–µ–ª—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –≤—ã—á–∏—Å–ª–∏—Ç—å:
‚Ä¢ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤;
‚Ä¢ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ –º–æ–¥—É–ª—é
—ç–ª–µ–º–µ–Ω—Ç–∞.
–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –º–∞—Å—Å–∏–≤ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã —Å–Ω–∞—á–∞–ª–∞ —Ä–∞—Å–ø–æ–ª–∞–≥–∞–ª–∏—Å—å –≤—Å–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ
—ç–ª–µ–º–µ–Ω—Ç—ã, –∞ –ø–æ—Ç–æ–º ‚Äî –≤—Å–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ (—ç–ª–µ–º–µ–Ω—Ç—ã, —Ä–∞–≤–Ω—ã–µ 0, —Å—á–∏—Ç–∞—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏)*/
void chooseHowToFillArray(int array[], int arraySize);

void fillArrayRandomNumbers(int array[], int arraySize, int a, int b);

void printArray(int array[], int arraySize);

void fillArrayFromPerson(int a[], int arraySize);

void countOfAnyElements(int array[], int arraySize);

void multiElementAfterMax(int array[], int arraySize);

int main() {
    int array[100];
    setlocale(LC_ALL, "Russian");
    int arraySize;
back2:
    cout << "–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –º–∞—Å—Å–∏–≤–∞ : " << endl;
    cin >> arraySize;
    if (arraySize > 100 or arraySize < 1) {
        cout << "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –º–∞—Å—Å–∏–≤–∞, –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ  " << endl;
        goto back2;
    }
    chooseHowToFillArray(array, arraySize);
    printArray(array, arraySize);
    countOfAnyElements(array, arraySize);
    multiElementAfterMax(array, arraySize);

    return 0;
}

void chooseHowToFillArray(int array[], int arraySize) {
    cout << "–ö–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –º–∞—Å—Å–∏–≤?" << endl;
back:
    cout << "E—Å–ª–∏ —Ä—É–∫–∞–º–∏ —Ç–æ –≤–≤–µ–¥–∏—Ç–µ 1, –µ—Å–ª–∏ —Ä–∞–Ω–¥–æ–º–Ω–æ —Ç–æ 2 " << endl;
    int number;
    cin >> number;
    switch (number) {
        case 1: {
            fillArrayFromPerson(array, arraySize);
            break;
        }
        case 2: {
            cout << "–ú–∞—Å—Å–∏–≤ –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω—è—Ç—å—Å—è —Å–ª—É—á–∞–π–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏, –≤–≤–µ–¥–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –≤–≤–æ–¥–∞ [a,b] —Å –∫–ª–∞–≤–∏–∞—É—Ç—Ä—ã" << endl;
            int a, b;
            cout << "a = ";
            cin >> a;
            cout << "b = ";
            cin >> b;
            if (a > b) swap(a, b);
            fillArrayRandomNumbers(array, arraySize, a, b);
            break;
        }
        default: {
            cout << "–í–≤–µ–¥–µ–Ω–æ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∑–∞–Ω–æ–≤–æ" << endl;
            goto back;
        }
    }
}

void fillArrayRandomNumbers(int array[], int arraySize, int a, int b) {
    cout << "–í—ã –≤—ã–±—Ä–∞–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ —Å–ª—É—á–∞–π–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏" << endl;
    srand(time(0));
    for (int i = 0; i < arraySize; i++) {
        array[i] = a + rand() % (b - a + 1);
    }
}

void fillArrayFromPerson(int a[], int arraySize) {
    cout << "–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–≤–æ–¥ —Ä—É–∫–∞–º–∏, –≤–≤–µ–¥–∏—Ç–µ " << arraySize << " —ç–ª–µ–º–µ–Ω—Ç–æ–≤ " << endl;
    for (int i = 0; i < arraySize; i++) {
        int number;
        cin >> number;
        a[i] = number;
    }
}

void countOfAnyElements(int array[], int arraySize) {
    int count = 0;
    int number = 0;
    for (int i = 0; i < arraySize; i++) {
        for (int j = 0; j < arraySize; j++) {
            if (array[i] != array[j]) {
                count++;
            }
        }
        if (count == arraySize - 1) {
            number++;
        }
        count = 0;
    }

    cout << "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ - " << number << endl;
}

void multiElementAfterMax(int array[], int arraySize) {
    int maxElement = array[0];
    unsigned int multi = 1;
    int number = 0;
    for (int i = 0; i < arraySize; i++) {
        if (abs(array[i]) > maxElement) {
            maxElement = array[i];
            number = i;
        }
    }
    for (number; number < arraySize; number++) {
        multi *= array[number];
    }
        cout << "–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ –º–æ–¥—É–ª—é –∑–Ω–∞—á–µ–Ω–∏—è- " << multi << endl;
    }



void printArray(int array[], int arraySize) {
    cout << "–í–∞—à –º–∞—Å—Å–∏–≤:" << endl;
    for (int i = 0; i < arraySize; i++) {
        cout << array[i] << " " << endl;
    }
}
